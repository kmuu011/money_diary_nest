user  nginx;

worker_processes  auto; # 워크 프로세스 수
worker_cpu_affinity auto; # 작업 프로세스 cpu 바인딩
worker_rlimit_nofile 204800; # 작업 프로세스가 최대 열수 있는 파일수로 처리량 증가

events {
    worker_connections  3072;
    use epoll;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile on;

    #응답 헤더 TCP packet 한조각으로 전송
    tcp_nopush on;

    #전송된 데이터 버퍼링 안함
    tcp_nodelay on;

    #요청 시간 초과
    client_body_timeout 20;

    #해당 시간후 연결 종료
    keepalive_timeout  30;

    #클라가 연결유지를 통해 요청할 수 있는 수
    keepalive_requests 100000;

    #응답하지 않는 클라 종료 허용
    reset_timedout_connection on;

    #클라에게 응답 전송하기 위한 제한 시간
    send_timeout 15;

    #off로 할경우 header에 nginx버전을 안보이게 해줌
    server_tokens off;

    #gzip  on;

    upstream node_app {
        least_conn;
        keepalive 1024;

        server node_0:8081 max_fails=9999 fail_timeout=30s;
    }

    server {
      listen 80;
      server_name  www.nestjs.co.kr;
      client_max_body_size 20M;

      location ~* "/*.php$"{
        return 404;
      }

      #if ($scheme  != 'https'){
      #  return 301 https://$server_name$request_uri;
      #}

     #if ($host != 'www.nestjs.co.kr') {
     #  return 301 https://$server_name$request_uri;
     #} # managed by Certbot

      #charset koi8-r;

      location / {
          proxy_pass http://node_app;
          proxy_hide_header Upgrade;
          proxy_hide_header X-Powered-By;

          proxy_http_version 1.1;
          proxy_cache_bypass $http_upgrade;

          proxy_set_header ip $remote_addr;
          proxy_set_header scheme $scheme;
          proxy_set_header request_uri $request_uri;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection 'upgrade';
          proxy_set_header Host $host;

          #백엔드 접속 제한 시간
          proxy_connect_timeout 30;

          #백엔드에서 데이터 읽을때 제한시간
          proxy_read_timeout 60;

          #백엔드로 데이터 전송할때 제한 시간
          proxy_send_timeout 60;

      }

    }

}
